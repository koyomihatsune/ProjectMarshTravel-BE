name: build-publish

on:
  push:
    branches:
      - main
      - staging

env:
  REGISTRY: ghcr.io

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lastest code with adaptable branches
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 2

      - name: Determine changed services
        id: changes
        run: |
          echo "Current branch to compare modified services is $(git rev-parse --abbrev-ref HEAD)"
          git fetch 
          temp_services_changed=()
          temp_is_common_changed=false
          temp_services_changed=($(git diff HEAD^ --name-only | grep '^apps/' | cut -d/ -f2 | sort -u))
          if git diff HEAD^ --name-only | grep -qv '^apps/'; then
            temp_is_common_changed=true
          fi
          echo "Modified services: ${temp_services_changed[@]}"
          echo "Is common services changed: $temp_is_common_changed"
          echo "SERVICES_CHANGED=$temp_services_changed" >> $GITHUB_ENV
          echo "IS_COMMON_CHANGED=$temp_is_common_changed" >> $GITHUB_ENV

      - name: Build services
        run: |
          echo "$IS_COMMON_CHANGED"
          echo "$SERVICES_CHANGED"
          if [ "$IS_COMMON_CHANGED" = true ]; then
            for service in apps/*; do
              if [ -d "$service" ]; then
                echo "Build $(basename "$service" | cut -d'/' -f2)"
                docker build -t "ghcr.io/marshtravel/marshtravel-$(basename "$service" | cut -d'/' -f2):lastest" -f $service/Dockerfile .
              fi
            done
          else
            for service in "${SERVICES_CHANGED[@]}"; do
              echo "Build $service"
              docker build -t "ghcr.io/marshtravel/marshtravel-$service:-lastest" -f "apps/$service" .
            done
          fi

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push images to GitHub Packages
        run: |
          if [ "$IS_COMMON_CHANGED" = true ]; then
            for service in apps/*; do
              if [ -d "$service" ]; then
                echo "Pushing marshtravel-$(basename "$service" | cut -d'/' -f2) image"
                docker push "ghcr.io/marshtravel/marshtravel-$(basename "$service" | cut -d'/' -f2):lastest"
              fi
            done
          else
            for service in "${SERVICES_CHANGED[@]}"; do
              echo "Pushing marshtravel-$service image"
              docker push "ghcr.io/marshtravel/marshtravel-$service:lastest"
            done
          fi
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CD Helm Repo
        uses: actions/checkout@v3
        with:
          repository: MarshTravel/ProjectMarshTravel-CD
          token: ${{ secrets.MY_PAT }}
      
      - name: Install Helm and kubectl
        run: |
          sudo apt-get install kubectl
          sudo apt-get install helm
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          ls 
          
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: 'Setup gke-gcloud-auth-plugin'
        run: 'gcloud components install gke-gcloud-auth-plugin'

      - name: 'Config Gcloud cluster in kubectl'
        run: |
          gcloud container clusters get-credentials marshtravel --region=us-central1-a
          kubectl config current-context
      

      
              
  